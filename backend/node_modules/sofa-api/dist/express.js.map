{"version":3,"file":"express.js","sourceRoot":"","sources":["../src/express.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport { DocumentNode, print, isObjectType, isNonNullType } from 'graphql';\n\nimport { buildOperation } from './operation';\nimport { getOperationInfo, OperationInfo } from './ast';\nimport { Sofa, isContextFn } from './sofa';\nimport { RouteInfo, Method, MethodMap } from './types';\nimport { convertName } from './common';\nimport { parseVariable } from './parse';\nimport { StartSubscriptionEvent, SubscriptionManager } from './subscriptions';\nimport { logger } from './logger';\n\nexport type ErrorHandler = (\n  res: express.Response,\n  errors: ReadonlyArray<any>\n) => void;\n\nexport type ExpressMethod = 'get' | 'post' | 'put' | 'delete' | 'patch';\n\nexport function createRouter(sofa: Sofa): express.Router {\n  logger.debug('[Sofa] Creating router');\n\n  const router = express.Router();\n\n  const queryType = sofa.schema.getQueryType();\n  const mutationType = sofa.schema.getMutationType();\n  const subscriptionManager = new SubscriptionManager(sofa);\n\n  if (queryType) {\n    Object.keys(queryType.getFields()).forEach(fieldName => {\n      const route = createQueryRoute({ sofa, router, fieldName });\n\n      if (sofa.onRoute) {\n        sofa.onRoute(route);\n      }\n    });\n  }\n\n  if (mutationType) {\n    Object.keys(mutationType.getFields()).forEach(fieldName => {\n      const route = createMutationRoute({ sofa, router, fieldName });\n\n      if (sofa.onRoute) {\n        sofa.onRoute(route);\n      }\n    });\n  }\n\n  router.post(\n    '/webhook',\n    useAsync(async (req, res) => {\n      const { subscription, variables, url }: StartSubscriptionEvent = req.body;\n\n      try {\n        const result = await subscriptionManager.start(\n          {\n            subscription,\n            variables,\n            url,\n          },\n          { req, res }\n        );\n\n        res.statusCode = 200;\n        res.statusMessage = 'OK';\n        res.json(result);\n      } catch (e) {\n        console.log(e);\n        res.statusCode = 500;\n        res.statusMessage = 'Subscription failed';\n        res.json(e);\n      }\n    })\n  );\n\n  router.post(\n    '/webhook/:id',\n    useAsync(async (req, res) => {\n      const id: string = req.params.id;\n      const variables: any = req.body.variables;\n\n      try {\n        const result = await subscriptionManager.update(\n          {\n            id,\n            variables,\n          },\n          {\n            req,\n            res,\n          }\n        );\n\n        res.statusCode = 200;\n        res.statusMessage = 'OK';\n        res.json(result);\n      } catch (e) {\n        console.log(e);\n        res.statusCode = 500;\n        res.statusMessage = 'Subscription failed to update';\n        res.json(e);\n      }\n    })\n  );\n\n  router.delete(\n    '/webhook/:id',\n    useAsync(async (req, res) => {\n      const id: string = req.params.id;\n\n      try {\n        const result = await subscriptionManager.stop(id);\n\n        res.statusCode = 200;\n        res.statusMessage = 'OK';\n        res.json(result);\n      } catch (e) {\n        console.log(e);\n        res.statusCode = 500;\n        res.statusMessage = 'Subscription failed to stop';\n        res.json(e);\n      }\n    })\n  );\n\n  return router;\n}\n\nfunction createQueryRoute({\n  sofa,\n  router,\n  fieldName,\n}: {\n  sofa: Sofa;\n  router: express.Router;\n  fieldName: string;\n}): RouteInfo {\n  logger.debug(`[Router] Creating ${fieldName} query`);\n\n  const queryType = sofa.schema.getQueryType()!;\n  const operation = buildOperation({\n    kind: 'query',\n    schema: sofa.schema,\n    field: fieldName,\n    models: sofa.models,\n    ignore: sofa.ignore,\n  });\n  const info = getOperationInfo(operation)!;\n  const field = queryType.getFields()[fieldName];\n  const fieldType = field.type;\n  const isSingle =\n    isObjectType(fieldType) ||\n    (isNonNullType(fieldType) && isObjectType(fieldType.ofType));\n  const hasIdArgument = field.args.some(arg => arg.name === 'id');\n  const path = getPath(fieldName, isSingle && hasIdArgument);\n\n  const method = produceMethod({\n    typeName: queryType.name,\n    fieldName,\n    methodMap: sofa.method,\n    defaultValue: 'GET',\n  });\n\n  router[method.toLocaleLowerCase() as ExpressMethod](\n    path,\n    useHandler({ info, fieldName, sofa, operation })\n  );\n\n  logger.debug(`[Router] ${fieldName} query available at ${method} ${path}`);\n\n  return {\n    document: operation,\n    path,\n    method: method.toUpperCase() as Method,\n  };\n}\n\nfunction createMutationRoute({\n  sofa,\n  router,\n  fieldName,\n}: {\n  sofa: Sofa;\n  router: express.Router;\n  fieldName: string;\n}): RouteInfo {\n  logger.debug(`[Router] Creating ${fieldName} mutation`);\n\n  const mutationType = sofa.schema.getMutationType()!;\n  const operation = buildOperation({\n    kind: 'mutation',\n    schema: sofa.schema,\n    field: fieldName,\n    models: sofa.models,\n    ignore: sofa.ignore,\n  });\n  const info = getOperationInfo(operation)!;\n  const path = getPath(fieldName);\n\n  const method = produceMethod({\n    typeName: mutationType.name,\n    fieldName,\n    methodMap: sofa.method,\n    defaultValue: 'POST',\n  });\n\n  router[method.toLowerCase() as ExpressMethod](\n    path,\n    useHandler({ info, fieldName, sofa, operation })\n  );\n\n  logger.debug(`[Router] ${fieldName} mutation available at ${method} ${path}`);\n\n  return {\n    document: operation,\n    path,\n    method: method.toUpperCase() as Method,\n  };\n}\n\nfunction useHandler(config: {\n  sofa: Sofa;\n  info: OperationInfo;\n  operation: DocumentNode;\n  fieldName: string;\n}) {\n  const { sofa, operation, fieldName } = config;\n  const info = config.info!;\n\n  return useAsync(async (req: express.Request, res: express.Response) => {\n    const variableValues = info.variables.reduce((variables, variable) => {\n      const name = variable.variable.name.value;\n      const value = parseVariable({\n        value: pickParam(req, name),\n        variable,\n        schema: sofa.schema,\n      });\n\n      if (typeof value === 'undefined') {\n        return variables;\n      }\n\n      return {\n        ...variables,\n        [name]: value,\n      };\n    }, {});\n\n    const contextValue = isContextFn(sofa.context)\n      ? await sofa.context({ req, res })\n      : sofa.context;\n\n    const result = await sofa.execute({\n      schema: sofa.schema,\n      source: print(operation),\n      contextValue,\n      variableValues,\n      operationName: info.operation.name && info.operation.name.value,\n    });\n\n    if (result.errors) {\n      const defaultErrorHandler: ErrorHandler = (res, errors) => {\n        res.status(500);\n        res.json(errors[0]);\n      };\n      const errorHandler: ErrorHandler =\n        sofa.errorHandler || defaultErrorHandler;\n      errorHandler(res, result.errors);\n      return;\n    }\n\n    res.json(result.data && result.data[fieldName]);\n  });\n}\n\nfunction getPath(fieldName: string, hasId = false) {\n  return `/${convertName(fieldName)}${hasId ? '/:id' : ''}`;\n}\n\nfunction pickParam(req: express.Request, name: string) {\n  if (req.params && req.params.hasOwnProperty(name)) {\n    return req.params[name];\n  }\n  if (req.query && req.query.hasOwnProperty(name)) {\n    return req.query[name];\n  }\n  if (req.body && req.body.hasOwnProperty(name)) {\n    return req.body[name];\n  }\n}\n\nfunction useAsync<T = any>(\n  handler: (\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ) => Promise<T>\n) {\n  return (\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ) => {\n    Promise.resolve(handler(req, res, next)).catch(e => {\n      console.log(e);\n      next(e);\n    });\n  };\n}\n\nfunction produceMethod({\n  typeName,\n  fieldName,\n  methodMap,\n  defaultValue,\n}: {\n  typeName: string;\n  fieldName: string;\n  methodMap?: MethodMap;\n  defaultValue: Method;\n}): Method {\n  const path = `${typeName}.${fieldName}`;\n\n  if (methodMap && methodMap[path]) {\n    return methodMap[path];\n  }\n\n  return defaultValue;\n}\n"]}