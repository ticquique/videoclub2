{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { GraphQLArgs, ExecutionResult, DocumentNode } from 'graphql';\n\nexport type ContextValue = Record<string, any>;\nexport type ContextFn = (init: { req: any; res: any }) => ContextValue;\nexport type Context = ContextValue | ContextFn;\n\nexport type Ignore = string[];\n\nexport type ExecuteFn = (args: GraphQLArgs) => Promise<ExecutionResult<any>>;\n\nexport type Method = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n\nexport interface RouteInfo {\n  document: DocumentNode;\n  path: string;\n  method: Method;\n}\nexport type OnRoute = (info: RouteInfo) => void;\n\nexport type MethodMap = Record<string, Method>;\n"]}